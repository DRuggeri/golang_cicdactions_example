name: Release
on:
  - push
  - pull_request

jobs:
  test:
    strategy:
      matrix:
        go-version:
          - 1.15.x
#          - 1.16.x
        os:
          - ubuntu-latest
#          - macos-latest
#          - windows-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: go test ./...

  release:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --parallelism 2 --rm-dist --timeout 1h --release-notes .release_info.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Prep for scratch docker images
        run: |
          export PROJECT_NAME="`echo $GITHUB_REPOSITORY | cut -d "/" -f 2`"
          echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_ENV

          export TAG=`curl -s https://api.github.com/repos/DRuggeri/$PROJECT_NAME/releases/latest | jq -r '.tag_name'`

          echo "
          FROM golang:1.17.0-alpine3.14 AS builder
          RUN apk --no-cache add git
          RUN go install github.com/DRuggeri/alertmanager_gotify_bridge@$TAG

          FROM scratch
          COPY --from=builder /go/bin/alertmanager_gotify_bridge /alertmanager_gotify_bridge
          ENTRYPOINT [\"/alertmanager_gotify_bridge\"]
          " > Dockerfile

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
            druggeri/${{ env.PROJECT_NAME }}
            ghcr.io/${{ github.repository }}

      - name: Build and push Docker images
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
